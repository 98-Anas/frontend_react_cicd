image: node:18

stages:
  - install
  - build
  - test
  - security
  - deploy

variables:
  APP_DIR: "frontend"
  NPM_AUDIT_LEVEL: "moderate"  # Control vulnerability threshold

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - ${APP_DIR}/node_modules/

install_dependencies:
  stage: install
  script:
    - cd ${APP_DIR}
    - npm install
    - npm audit --omit=dev --audit-level=${NPM_AUDIT_LEVEL} || true  # Non-blocking
  artifacts:
    paths:
      - ${APP_DIR}/node_modules/
  tags:
    - appExec

build_app:
  stage: build
  script:
    - cd ${APP_DIR}
    - npm run build
  artifacts:
    paths:
      - ${APP_DIR}/build/
  tags:
    - appExec

unit_tests:
  stage: test
  script:
    - cd ${APP_DIR}
    - CI=true npm test
  tags:
    - appExec

#lint_code:
#  stage: test
#  script:
#    - cd ${APP_DIR}
#    - npm install eslint eslint-plugin-react eslint-plugin-react-hooks --save-dev
#    - npm run lint
#  tags:
#    - appExec

include:
- template: Security/Dependency-Scanning.gitlab-ci.yml

dependency_scanning:
  variables:
    DS_EXCLUDED_PATHS: "node_modules,build"
  tags:
    - appExec

deploy_to_pages:
  stage: deploy
  script:
    - cd ${APP_DIR}
    - mkdir -p public
    - cp -r build/* public/
  artifacts:
    paths:
      - public
  only:
    - main
  tags:
    - appExec